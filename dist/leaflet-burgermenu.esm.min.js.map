{"version":3,"file":"leaflet-burgermenu.esm.min.js","sources":["../src/leaflet-burgermenu.js"],"sourcesContent":["// leaflet-burgermenu.js\n// A Leaflet plugin that adds a burger menu with submenus\n// Author: Benjamin W. Portner\n// License: MIT\nimport { Control, DomUtil, DomEvent } from \"leaflet\";\n\n\nexport class BurgerMenuControl extends Control {\n\n    constructor(options) {\n        const defaultOptions = {\n            position: 'topleft',\n            menuIcon: '&#9776;', // Burger icon\n            subMenuIndicator: 'âŠ³',\n            title: 'Menu',\n            menuItems: [] // [{ title: 'Main', subItems: [{ title: 'Sub1', onClick: fn }, ...] }]\n        };\n        options = { ...defaultOptions, ...options };\n        super(options);\n    }\n\n    _generateSubMenus(item, itemEl, level) {\n        if (item.menuItems && item.menuItems.length) {\n            if (level > 0) {\n                itemEl.textContent += ` ${this.options.subMenuIndicator}`;\n            }\n            const classList = `burger-menu level-${level} hidden`;\n            const subMenu = DomUtil.create('div', classList, itemEl);\n            DomEvent.on(itemEl, 'mouseover', function (e) {\n                subMenu.classList.remove('hidden');\n            });\n            DomEvent.on(itemEl, 'mouseout', function (e) {\n                subMenu.classList.add('hidden');\n            });\n            item.menuItems.forEach(subItem => {\n                const classList = `burger-menu-item level-${level}`;\n                const subItemEl = DomUtil.create('div', classList, subMenu);\n                subItemEl.textContent = subItem.title;\n                this._generateSubMenus(subItem, subItemEl, level + 1);\n            });\n        } else if (typeof item.onClick === 'function') {\n            DomEvent.on(itemEl, 'click', function (e) {\n                e.stopPropagation();\n                item.onClick(e);\n            });\n        }\n    }\n\n    onAdd(map) {\n        const container = DomUtil.create('div', 'leaflet-control-burgermenu');\n        DomEvent.disableClickPropagation(container);\n\n        const button = DomUtil.create('div', 'burger-button', container);\n        button.innerHTML = this.options.menuIcon;\n        button.title = this.options.title;\n\n        this._generateSubMenus(this.options, container, 0);\n\n        return container;\n    }\n};\n"],"names":["BurgerMenuControl","Control","constructor","options","super","position","menuIcon","subMenuIndicator","title","menuItems","_generateSubMenus","item","itemEl","level","length","textContent","this","classList","subMenu","DomUtil","create","DomEvent","on","e","remove","add","forEach","subItem","subItemEl","onClick","stopPropagation","onAdd","map","container","disableClickPropagation","button","innerHTML"],"mappings":"6DAOO,MAAMA,UAA0BC,EAEnC,WAAAC,CAAYC,GASRC,MADAD,EAAU,CANNE,SAAU,UACVC,SAAU,UACVC,iBAAkB,IAClBC,MAAO,OACPC,UAAW,MAEmBN,GAE1C,CAEI,iBAAAO,CAAkBC,EAAMC,EAAQC,GAC5B,GAAIF,EAAKF,WAAaE,EAAKF,UAAUK,OAAQ,CACrCD,EAAQ,IACRD,EAAOG,aAAe,IAAIC,KAAKb,QAAQI,oBAE3C,MAAMU,EAAY,qBAAqBJ,WACjCK,EAAUC,EAAQC,OAAO,MAAOH,EAAWL,GACjDS,EAASC,GAAGV,EAAQ,aAAa,SAAUW,GACvCL,EAAQD,UAAUO,OAAO,SACzC,IACYH,EAASC,GAAGV,EAAQ,YAAY,SAAUW,GACtCL,EAAQD,UAAUQ,IAAI,SACtC,IACYd,EAAKF,UAAUiB,SAAQC,IACnB,MAAMV,EAAY,0BAA0BJ,IACtCe,EAAYT,EAAQC,OAAO,MAAOH,EAAWC,GACnDU,EAAUb,YAAcY,EAAQnB,MAChCQ,KAAKN,kBAAkBiB,EAASC,EAAWf,EAAQ,EAAE,GAE5D,KAAkC,mBAAjBF,EAAKkB,SACnBR,EAASC,GAAGV,EAAQ,SAAS,SAAUW,GACnCA,EAAEO,kBACFnB,EAAKkB,QAAQN,EAC7B,GAEA,CAEI,KAAAQ,CAAMC,GACF,MAAMC,EAAYd,EAAQC,OAAO,MAAO,8BACxCC,EAASa,wBAAwBD,GAEjC,MAAME,EAAShB,EAAQC,OAAO,MAAO,gBAAiBa,GAMtD,OALAE,EAAOC,UAAYpB,KAAKb,QAAQG,SAChC6B,EAAO3B,MAAQQ,KAAKb,QAAQK,MAE5BQ,KAAKN,kBAAkBM,KAAKb,QAAS8B,EAAW,GAEzCA,CACf"}